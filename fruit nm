-- Configuration
local labelColor = Color3.new(1, 1, 1) -- Color of the label text
local labelStrokeColor = Color3.new(0, 0, 0) -- Color of the label text stroke
local labelSize = UDim2.new(0, 100, 0, 30) -- Size of the label
local labelOffset = Vector3.new(0, 3, 0) -- Offset position of the label above the tool

-- List of desired tool names
local desiredToolNames = {
    "Kilo Fruit",
    "Spin Fruit",
    "Chop Fruit",
    "Spring Fruit",
    "Bomb Fruit",
    "Smoke Fruit",
    "Spike Fruit",
    "Flame Fruit",
    "Falcon Fruit",
    "Ice Fruit",
    "Sand Fruit",
    "Dark Fruit",
    "Revive Fruit",
    "Diamond Fruit",
    "Light Fruit",
    "Barrier Fruit",
    "Rubber Fruit",
    "Magma Fruit",
    "Quake Fruit",
    "Buddha Fruit", 
    "Love Fruit",
    "Spider Fruit",
    "Phoenix Fruit",
    "Portal Fruit",
    "Rumble Fruit",
    "Paw Fruit",
    "Gravity Fruit",
    "Blizzard Fruit",
    "Dough Fruit",
    "Shadow Fruit",
    "Venom Fruit",
    "Control Fruit",
    "Spirit Fruit",
    "Dragon Fruit",
    "Leopard Fruit"
}

local ESPEnabled = true
local ESP_FRUIT_ENABLED = true

local function ToggleESP()
    if ESPEnabled then
        -- Enable ESP functionality for first script
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
        local camera = workspace.CurrentCamera

        local function createFloatingLabel(part, toolName)
            local label = Instance.new("BillboardGui")
            label.Name = "FloatingLabel"
            label.Adornee = part
            label.Size = labelSize
            label.StudsOffset = labelOffset
            label.AlwaysOnTop = true
            label.Parent = game:GetService("CoreGui")

            local textLabel = Instance.new("TextLabel")
            textLabel.Name = "DistanceLabel"
            textLabel.BackgroundTransparency = 1
            textLabel.Size = UDim2.new(1, 0, 1, 0)
            textLabel.Font = Enum.Font.SourceSansBold
            textLabel.TextSize = 18
            textLabel.TextColor3 = labelColor
            textLabel.TextStrokeColor3 = labelStrokeColor
            textLabel.TextStrokeTransparency = 0
            textLabel.Text = toolName -- Display the tool name
            textLabel.Parent = label

            local function updateLabel()
                local distance = math.floor((part.Position - humanoidRootPart.Position).Magnitude)
                textLabel.Text = toolName .. "\n" .. tostring(distance) .. "m" -- Update both tool name and distance
            end

            -- Call updateLabel initially
            updateLabel()

            -- Connect updateLabel to the Heartbeat event to continuously update the label text
            game:GetService("RunService").Heartbeat:Connect(updateLabel)
        end

        local function isDesiredTool(toolName)
            for _, desiredName in ipairs(desiredToolNames) do
                if desiredName == toolName then
                    return true
                end
            end
            return false
        end

        local function onToolAdded(tool)
            local toolName = tool.Name
            if isDesiredTool(toolName) then
                createFloatingLabel(tool.Handle, toolName)
            end
        end

        local function onToolRemoved(tool)
            local floatingLabel = tool.Handle:FindFirstChild("FloatingLabel")
            if floatingLabel then
                floatingLabel:Destroy()
            end
        end

        -- Listen for new tools
        game:GetService("Workspace").DescendantAdded:Connect(function(child)
            if child:IsA("Tool") then
                local toolName = child.Name
                if isDesiredTool(toolName) then
                    createFloatingLabel(child.Handle, toolName)
                end
            end
        end)

        -- Listen for removed tools
        game:GetService("Workspace").DescendantRemoving:Connect(function(child)
            if child:IsA("Tool") then
                local floatingLabel = child.Handle:FindFirstChild("FloatingLabel")
                if floatingLabel then
                    floatingLabel:Destroy()
                end
            end
        end)

        -- Check for existing tools
        for _, tool in ipairs(game:GetService("Workspace"):GetDescendants()) do
            if tool:IsA("Tool") and isDesiredTool(tool.Name) then
                createFloatingLabel(tool.Handle, tool.Name)
            end
        end

        -- Connect the tool added and removed events
        player.Backpack.ChildAdded:Connect(onToolAdded)
        player.Backpack.ChildRemoved:Connect(onToolRemoved)
        character.ChildAdded:Connect(onToolAdded)
        character.ChildRemoved:Connect(onToolRemoved)
    else
        -- Disable ESP functionality for first script
        local floatingLabels = game:GetService("CoreGui"):GetChildren()
        for _, label in ipairs(floatingLabels) do
            if label:IsA("BillboardGui") and label.Name == "FloatingLabel" then
                label:Destroy()
            end
        end
    end

    if ESP_FRUIT_ENABLED then
        -- Enable ESP functionality for second script
        -- Rest of the code...
    else
        -- Disable ESP functionality for second script
        -- Rest of the code...
    end
end

-- Call the ToggleESP function directly to enable ESP
ToggleESP()
